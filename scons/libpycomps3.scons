# vim: set ft=python:
import sys
import json
import os.path
import distutils.sysconfig as sysconfig

import json

def libpycomps_conf(target, source, env):
    python_version = json.load(open(source[0].path, "r"))
    env.Append(CPPPATH = [python_version["CPPPATH"],
                          "/usr/include/",
                          "/usr/include/libxml2/", libcomps_include_path])
    env.Append(LIBS=["comps", python_version["LIBS"]])
    print >> sys.stderr, "LIBCOMPS_PATH", os.path.dirname(libcomps.data[0].abspath)
    env.Append(LIBPATH=[os.path.dirname(libcomps.data[0].abspath),
                         python_version["LIBPATH"]])


Import("PROJECT_DIR", "env", "libcomps", "libcomps_include_path")

FORM_PATH_TO_SRCS = "../libcomps/src/python/src/%s"
PATH_TO_SRCS = "../libcomps/src/python/src/"

FORM_PATH_TO_TGTS = "build_libpycomps3/%s.os"
PATH_TO_TGTS = "_libpycomps3/_libpycomps/"

PYCOMPS_SRCS = """pycomps.c pycomps_sequence.c pycomps_envs.c
                   pycomps_categories.c pycomps_groups.c pycomps_gids.c
                   pycomps_utils.c pycomps_dict.c pycomps_mdict.c
                   pycomps_hash.c pycomps_exc.c pycomps_lbw.c
"""

PYCOMPS3_OUT = "_libpycomps3/_libpycomps/"


local_env = Environment(CC = 'gcc',
                  CCFLAGS = '-O2 --pedantic -Wall --std=c99 -Wextra ' +
                            '-Wno-missing-field-initializers -fno-strict-aliasing -g')

local_env.VariantDir(PATH_TO_TGTS , PATH_TO_SRCS, duplicate=0)

pycomps_files_fullp = [FORM_PATH_TO_SRCS % x for x in PYCOMPS_SRCS.split() if x]
pycomps_files_targets = []
for x in PYCOMPS_SRCS.split():
    if x:
        pycomps_files_targets.append(FORM_PATH_TO_TGTS % x.split(".")[0])

pycopy3 = env.Command(os.path.join(PYCOMPS3_OUT, "__init__.py"), "__init__.py",
                     Copy("$TARGET", "$SOURCE"))
local_env.Alias("pycopy3", pycopy3)

pyconf = local_env.Command("py3.json", "pyconf3.py", "python3 $SOURCE > $TARGET")
local_env.Alias("pyconf", pyconf)

libpycomps_bld = local_env.Command("libpycomps_bld3", 'py3.json', libpycomps_conf)
local_env.Alias("libpycomps_cfg3", libpycomps_bld)

for t,s in zip(pycomps_files_targets, pycomps_files_fullp):
    so = local_env.SharedObject(t, s)
    local_env.Depends(so, "libpycomps_cfg3")

libpycomps3 = local_env.SharedLibrary(os.path.join(PYCOMPS3_OUT, "_libpycomps"),
                         pycomps_files_targets,
                        SHLIBPREFIX="")

local_env.Depends(libpycomps_bld, local_env.Alias("pyconf3"))

local_env.Depends(libpycomps3, local_env.Alias("pycopy3"))
local_env.Depends(libpycomps3, local_env.Alias("libpycomps_cfg"))
local_env.Depends(libpycomps3, local_env.Alias("libcomps"))
local_env.Export("libpycomps3")
local_env.Export("PYCOMPS3_OUT")
